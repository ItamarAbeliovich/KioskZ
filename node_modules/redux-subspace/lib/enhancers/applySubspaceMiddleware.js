'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _redux = require('redux');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**
                                                                                                                                                                                                     * Copyright 2017, IOOF Holdings Limited.
                                                                                                                                                                                                     * All rights reserved.
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * This source code is licensed under the BSD-style license found in the
                                                                                                                                                                                                     * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                     */

var applySubspaceMiddleware = function applySubspaceMiddleware() {
    for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
        middlewares[_key] = arguments[_key];
    }

    return function (createSubspace) {
        return function (store) {

            var subspacedStore = createSubspace(store);

            var _getState = subspacedStore.getState;
            var _dispatch = subspacedStore.dispatch;

            var namespace = subspacedStore.namespace,
                rootStore = subspacedStore.rootStore,
                subspaceTypes = subspacedStore.subspaceTypes,
                processAction = subspacedStore.processAction;


            var middlewareApi = {
                getState: function getState() {
                    return _getState.apply(undefined, arguments);
                },
                dispatch: function dispatch() {
                    return _dispatch.apply(undefined, arguments);
                },
                rootStore: rootStore,
                namespace: namespace,
                subspaceTypes: subspaceTypes,
                processAction: processAction
            };

            var chain = middlewares.map(function (middleware) {
                return middleware(middlewareApi);
            }).map(function (pipeline) {
                return typeof pipeline === 'function' ? { dispatch: pipeline } : pipeline;
            });

            var getStateChain = chain.map(function (pipeline) {
                return pipeline.getState;
            }).filter(function (pipeline) {
                return pipeline;
            });
            var dispatchChain = chain.map(function (pipeline) {
                return pipeline.dispatch;
            }).filter(function (pipeline) {
                return pipeline;
            });

            _getState = _redux.compose.apply(undefined, _toConsumableArray(getStateChain))(subspacedStore.getState);
            _dispatch = _redux.compose.apply(undefined, _toConsumableArray(dispatchChain))(subspacedStore.dispatch);

            return _extends({}, subspacedStore, {
                getState: _getState,
                dispatch: _dispatch
            });
        };
    };
};

exports.default = applySubspaceMiddleware;