'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.subspaceRoot = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
                                                                                                                                                                                                                                                                               * Copyright 2017, IOOF Holdings Limited.
                                                                                                                                                                                                                                                                               * All rights reserved.
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * This source code is licensed under the BSD-style license found in the
                                                                                                                                                                                                                                                                               * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                               */

var _redux = require('redux');

var _subspaceEnhancer = require('../enhancers/subspaceEnhancer');

var _subspaceEnhancer2 = _interopRequireDefault(_subspaceEnhancer);

var _namespaceEnhancer = require('../enhancers/namespaceEnhancer');

var _namespaceEnhancer2 = _interopRequireDefault(_namespaceEnhancer);

var _rootStoreEnhancer = require('../enhancers/rootStoreEnhancer');

var _rootStoreEnhancer2 = _interopRequireDefault(_rootStoreEnhancer);

var _subspaceTypesEnhancer = require('../enhancers/subspaceTypesEnhancer');

var _subspaceTypesEnhancer2 = _interopRequireDefault(_subspaceTypesEnhancer);

var _processActionEnhancer = require('../enhancers/processActionEnhancer');

var _processActionEnhancer2 = _interopRequireDefault(_processActionEnhancer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var resolveParameters = function resolveParameters(mapState, namespace) {
    if (process.env.NODE_ENV !== 'production') {
        console.assert(mapState || namespace, 'mapState and/or namespace must be defined.');
    }

    var mapStateType = typeof mapState === 'undefined' ? 'undefined' : _typeof(mapState);
    var namespaceType = typeof namespace === 'undefined' ? 'undefined' : _typeof(namespace);

    if (mapStateType === 'string' && namespaceType !== 'null') {
        namespace = mapState;
    }

    if (mapStateType !== 'function') {
        mapState = function mapState(state) {
            return state[namespace];
        };
    }

    return [mapState, namespace];
};

var DEFAULT_OPTIONS = {
    enhancer: function enhancer(subspace) {
        return subspace;
    }
};

var resolveEnhancer = function resolveEnhancer() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_OPTIONS,
        _ref$enhancer = _ref.enhancer,
        enhancer = _ref$enhancer === undefined ? DEFAULT_OPTIONS.enhancer : _ref$enhancer;

    var enhancerCheck = typeof enhancer === 'function';

    if (process.env.NODE_ENV !== 'production') {
        console.assert(enhancerCheck, 'enhancer must be a function.');
    } else if (!enhancerCheck) {
        return DEFAULT_OPTIONS.enhancer;
    }

    return enhancer;
};

var createSubspace = function createSubspace(store, enhancer) {

    if (typeof enhancer !== 'undefined') {
        return enhancer(createSubspace)(store);
    }

    return store;
};

var subspaceEnhanced = function subspaceEnhanced(mapState, namespace, isRoot) {
    var subspaceEnhancers = (0, _redux.compose)((0, _subspaceEnhancer2.default)(mapState, namespace), (0, _namespaceEnhancer2.default)(namespace), (0, _subspaceTypesEnhancer2.default)(isRoot, namespace), (0, _processActionEnhancer2.default)(namespace), _rootStoreEnhancer2.default);

    return function (store) {
        return createSubspace(store, (0, _redux.compose)(resolveEnhancer(store.subspaceOptions), subspaceEnhancers));
    };
};

var subspaceRoot = exports.subspaceRoot = function subspaceRoot(store, subspaceOptions) {
    return subspaceEnhanced(undefined, undefined, true)(_extends({}, store, { subspaceOptions: subspaceOptions }));
};

var subspace = function subspace(mapState, namespace) {
    return subspaceEnhanced.apply(undefined, _toConsumableArray(resolveParameters(mapState, namespace)));
};

exports.default = subspace;